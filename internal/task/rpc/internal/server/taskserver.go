// Code generated by goctl. DO NOT EDIT.
// Source: task.proto

package server

import (
	"context"

	"chatops-server/internal/task/rpc/internal/logic"
	"chatops-server/internal/task/rpc/internal/svc"
	"chatops-server/internal/task/rpc/task"
)

type TaskServer struct {
	svcCtx *svc.ServiceContext
	task.UnimplementedTaskServer
}

func NewTaskServer(svcCtx *svc.ServiceContext) *TaskServer {
	return &TaskServer{
		svcCtx: svcCtx,
	}
}

func (s *TaskServer) AddTask(ctx context.Context, in *task.AddTaskRequest) (*task.AddTaskResponse, error) {
	l := logic.NewAddTaskLogic(ctx, s.svcCtx)
	return l.AddTask(in)
}

func (s *TaskServer) DeleteTask(ctx context.Context, in *task.DeleteTaskRequest) (*task.DeleteTaskResponse, error) {
	l := logic.NewDeleteTaskLogic(ctx, s.svcCtx)
	return l.DeleteTask(in)
}

func (s *TaskServer) UpdateTask(ctx context.Context, in *task.UpdateTaskRequest) (*task.UpdateTaskResponse, error) {
	l := logic.NewUpdateTaskLogic(ctx, s.svcCtx)
	return l.UpdateTask(in)
}

func (s *TaskServer) TaskDetail(ctx context.Context, in *task.TaskDetailRequest) (*task.TaskDetailResponse, error) {
	l := logic.NewTaskDetailLogic(ctx, s.svcCtx)
	return l.TaskDetail(in)
}

func (s *TaskServer) TaskList(ctx context.Context, in *task.TaskListRequest) (*task.TaskListResponse, error) {
	l := logic.NewTaskListLogic(ctx, s.svcCtx)
	return l.TaskList(in)
}
