// Code generated by goctl. DO NOT EDIT.
// Source: task.proto

package taskclient

import (
	"context"

	"chatops-server/internal/task/rpc/task"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddTaskRequest     = task.AddTaskRequest
	AddTaskResponse    = task.AddTaskResponse
	DeleteTaskRequest  = task.DeleteTaskRequest
	DeleteTaskResponse = task.DeleteTaskResponse
	TaskDetailRequest  = task.TaskDetailRequest
	TaskDetailResponse = task.TaskDetailResponse
	TaskInfo           = task.TaskInfo
	TaskListRequest    = task.TaskListRequest
	TaskListResponse   = task.TaskListResponse
	UpdateTaskRequest  = task.UpdateTaskRequest
	UpdateTaskResponse = task.UpdateTaskResponse

	Task interface {
		AddTask(ctx context.Context, in *AddTaskRequest, opts ...grpc.CallOption) (*AddTaskResponse, error)
		DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*DeleteTaskResponse, error)
		UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error)
		TaskDetail(ctx context.Context, in *TaskDetailRequest, opts ...grpc.CallOption) (*TaskDetailResponse, error)
		TaskList(ctx context.Context, in *TaskListRequest, opts ...grpc.CallOption) (*TaskListResponse, error)
	}

	defaultTask struct {
		cli zrpc.Client
	}
)

func NewTask(cli zrpc.Client) Task {
	return &defaultTask{
		cli: cli,
	}
}

func (m *defaultTask) AddTask(ctx context.Context, in *AddTaskRequest, opts ...grpc.CallOption) (*AddTaskResponse, error) {
	client := task.NewTaskClient(m.cli.Conn())
	return client.AddTask(ctx, in, opts...)
}

func (m *defaultTask) DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*DeleteTaskResponse, error) {
	client := task.NewTaskClient(m.cli.Conn())
	return client.DeleteTask(ctx, in, opts...)
}

func (m *defaultTask) UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error) {
	client := task.NewTaskClient(m.cli.Conn())
	return client.UpdateTask(ctx, in, opts...)
}

func (m *defaultTask) TaskDetail(ctx context.Context, in *TaskDetailRequest, opts ...grpc.CallOption) (*TaskDetailResponse, error) {
	client := task.NewTaskClient(m.cli.Conn())
	return client.TaskDetail(ctx, in, opts...)
}

func (m *defaultTask) TaskList(ctx context.Context, in *TaskListRequest, opts ...grpc.CallOption) (*TaskListResponse, error) {
	client := task.NewTaskClient(m.cli.Conn())
	return client.TaskList(ctx, in, opts...)
}
