// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"chatops-server/internal/user/rpc/internal/logic"
	"chatops-server/internal/user/rpc/internal/svc"
	"chatops-server/internal/user/rpc/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Login(ctx context.Context, in *user.LoginRequest) (*user.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) AddUser(ctx context.Context, in *user.AddUserRequest) (*user.AddUserResponse, error) {
	l := logic.NewAddUserLogic(ctx, s.svcCtx)
	return l.AddUser(in)
}

func (s *UserServer) UpdateUserInfo(ctx context.Context, in *user.UpdateUserInfoRequest) (*user.UpdateUserInfoResponse, error) {
	l := logic.NewUpdateUserInfoLogic(ctx, s.svcCtx)
	return l.UpdateUserInfo(in)
}

func (s *UserServer) UserList(ctx context.Context, in *user.UserListRequest) (*user.UserListResponse, error) {
	l := logic.NewUserListLogic(ctx, s.svcCtx)
	return l.UserList(in)
}

func (s *UserServer) UserDetail(ctx context.Context, in *user.UserDetailRequest) (*user.UserDetailResponse, error) {
	l := logic.NewUserDetailLogic(ctx, s.svcCtx)
	return l.UserDetail(in)
}

func (s *UserServer) DelUser(ctx context.Context, in *user.DelUserRequest) (*user.DelUserResponse, error) {
	l := logic.NewDelUserLogic(ctx, s.svcCtx)
	return l.DelUser(in)
}
