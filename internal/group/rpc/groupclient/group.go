// Code generated by goctl. DO NOT EDIT.
// Source: group.proto

package groupclient

import (
	"context"

	"chatops-server/internal/group/rpc/group"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddGroupRequest     = group.AddGroupRequest
	AddGroupResponse    = group.AddGroupResponse
	DeleteGroupRequest  = group.DeleteGroupRequest
	DeleteGroupResponse = group.DeleteGroupResponse
	GroupDetailRequest  = group.GroupDetailRequest
	GroupDetailResponse = group.GroupDetailResponse
	GroupInfo           = group.GroupInfo
	GroupListRequest    = group.GroupListRequest
	GroupListResponse   = group.GroupListResponse

	Group interface {
		AddGroup(ctx context.Context, in *AddGroupRequest, opts ...grpc.CallOption) (*AddGroupResponse, error)
		DeleteGroup(ctx context.Context, in *DeleteGroupRequest, opts ...grpc.CallOption) (*DeleteGroupResponse, error)
		GroupList(ctx context.Context, in *GroupListRequest, opts ...grpc.CallOption) (*GroupListResponse, error)
		GroupDetail(ctx context.Context, in *GroupDetailRequest, opts ...grpc.CallOption) (*GroupDetailResponse, error)
	}

	defaultGroup struct {
		cli zrpc.Client
	}
)

func NewGroup(cli zrpc.Client) Group {
	return &defaultGroup{
		cli: cli,
	}
}

func (m *defaultGroup) AddGroup(ctx context.Context, in *AddGroupRequest, opts ...grpc.CallOption) (*AddGroupResponse, error) {
	client := group.NewGroupClient(m.cli.Conn())
	return client.AddGroup(ctx, in, opts...)
}

func (m *defaultGroup) DeleteGroup(ctx context.Context, in *DeleteGroupRequest, opts ...grpc.CallOption) (*DeleteGroupResponse, error) {
	client := group.NewGroupClient(m.cli.Conn())
	return client.DeleteGroup(ctx, in, opts...)
}

func (m *defaultGroup) GroupList(ctx context.Context, in *GroupListRequest, opts ...grpc.CallOption) (*GroupListResponse, error) {
	client := group.NewGroupClient(m.cli.Conn())
	return client.GroupList(ctx, in, opts...)
}

func (m *defaultGroup) GroupDetail(ctx context.Context, in *GroupDetailRequest, opts ...grpc.CallOption) (*GroupDetailResponse, error) {
	client := group.NewGroupClient(m.cli.Conn())
	return client.GroupDetail(ctx, in, opts...)
}
