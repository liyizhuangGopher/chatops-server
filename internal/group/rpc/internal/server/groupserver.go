// Code generated by goctl. DO NOT EDIT.
// Source: group.proto

package server

import (
	"context"

	"chatops-server/internal/group/rpc/group"
	"chatops-server/internal/group/rpc/internal/logic"
	"chatops-server/internal/group/rpc/internal/svc"
)

type GroupServer struct {
	svcCtx *svc.ServiceContext
	group.UnimplementedGroupServer
}

func NewGroupServer(svcCtx *svc.ServiceContext) *GroupServer {
	return &GroupServer{
		svcCtx: svcCtx,
	}
}

func (s *GroupServer) AddGroup(ctx context.Context, in *group.AddGroupRequest) (*group.AddGroupResponse, error) {
	l := logic.NewAddGroupLogic(ctx, s.svcCtx)
	return l.AddGroup(in)
}

func (s *GroupServer) DeleteGroup(ctx context.Context, in *group.DeleteGroupRequest) (*group.DeleteGroupResponse, error) {
	l := logic.NewDeleteGroupLogic(ctx, s.svcCtx)
	return l.DeleteGroup(in)
}

func (s *GroupServer) GroupList(ctx context.Context, in *group.GroupListRequest) (*group.GroupListResponse, error) {
	l := logic.NewGroupListLogic(ctx, s.svcCtx)
	return l.GroupList(in)
}

func (s *GroupServer) GroupDetail(ctx context.Context, in *group.GroupDetailRequest) (*group.GroupDetailResponse, error) {
	l := logic.NewGroupDetailLogic(ctx, s.svcCtx)
	return l.GroupDetail(in)
}
